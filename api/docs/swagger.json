{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/dashboard/configs": {
            "get": {
                "description": "Returns the dashboard configs read from the configs.json file.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the dashboard configs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dashboard.Configs"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the dashboard columns in the configs.json file.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update dashboard columns",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 5,
                        "description": "New number of columns.",
                        "name": "columns",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Show the last background error warning in the dashboard.",
                        "name": "showBackgroundErrorWarning",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 20,
                        "description": "How many result will be shown in the dashboard search form. It'll be used by all site sources. The maximum allowed limit value varies per source.",
                        "name": "searchResultsLimit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/dashboard/last_background_error": {
            "get": {
                "description": "Returns the last error that happened in the background. Usually used to display the error in the dashboard.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the last background error",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dashboard.BackgroundError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the last error that happened in the background. Usually used to clear the error in the dashboard.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the last background error",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/dashboard/last_update": {
            "get": {
                "description": "Returns the last time a resource that should trigger an update in the iframe/dashboard was updated. Usually used to update the dashboard when an event not triggered by the user occurs.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the last update date",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns status OK",
                "produces": [
                    "text/plain"
                ],
                "summary": "Health check route",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manga": {
            "get": {
                "description": "Gets a manga from the database. You must provide either the manga ID or the manga URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get manga",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"manga\": mangaObj}",
                        "schema": {
                            "$ref": "#/definitions/manga.Manga"
                        }
                    }
                }
            },
            "post": {
                "description": "Gets a manga metadata from source and inserts in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add manga",
                "parameters": [
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "If true, assumes the manga has no chapters and sets the last released chapter to null without even checking if the manga really doesn't have released chapters. If false, gets the manga's last released chapter metadata from source. It doesn't do anything with the last read chapter. Defaults to false.",
                        "name": "manga_has_no_chapters",
                        "in": "query"
                    },
                    {
                        "description": "Manga data",
                        "name": "manga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AddMangaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a manga from the database. You must provide either the manga ID or the manga URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete manga",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/manga/chapters": {
            "get": {
                "description": "Get a manga chapters from the source. You must provide either the manga ID or the manga URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get manga chapters",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"1as4fa7\"",
                        "description": "Manga Internal ID",
                        "name": "manga_internal_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"chapters\": [chapterObj]}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/manga.Chapter"
                            }
                        }
                    }
                }
            }
        },
        "/manga/cover_img": {
            "patch": {
                "description": "Updates a manga cover image in the database. You must provide either the manga ID or the manga URL. You must provide only one of the following: cover_img, cover_img_url, get_cover_img_from_source.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update manga cover image",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"1as4fa7\"",
                        "description": "Manga Internal ID",
                        "name": "manga_internal_id",
                        "in": "query"
                    },
                    {
                        "type": "file",
                        "description": "Manga cover image file. Remember to set the Content-Type header to 'multipart/form-data' when sending the request.",
                        "name": "cover_img",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "\"https://example.com/cover.jpg\"",
                        "description": "Manga cover image URL",
                        "name": "cover_img_url",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "Let Mantium fetch the cover image from the source site",
                        "name": "get_cover_img_from_source",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/manga/last_read_chapter": {
            "patch": {
                "description": "Updates a manga last read chapter in the database. If both `chapter` and `chapter_url` are empty strings in the body, set the last read chapter to the last released chapter in the database. You must provide either the manga ID or the manga URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update manga last read chapter",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"1as4fa7\"",
                        "description": "Manga Internal ID",
                        "name": "manga_internal_id",
                        "in": "query"
                    },
                    {
                        "description": "Chapter",
                        "name": "chapter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UpdateMangaChapterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/manga/status": {
            "patch": {
                "description": "Updates a manga status in the database. You must provide either the manga ID or the manga URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update manga status",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "description": "Manga status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UpdateMangaStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/manga/turn_into_multimanga": {
            "post": {
                "description": "Turns a manga into a multimanga. You must provide either the manga ID or the manga URL.",
                "produces": [
                    "application/json"
                ],
                "summary": "Turn manga into multimanga",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"https://mangadex.org/title/1/one-piece\"",
                        "description": "Manga URL",
                        "name": "url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/mangas": {
            "get": {
                "description": "Gets all mangas from the database in no particlar order. Return only the current manga of multimangas.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get mangas",
                "responses": {
                    "200": {
                        "description": "{\"mangas\": [mangaObj]}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/manga.Manga"
                            }
                        }
                    }
                }
            }
        },
        "/mangas/add_to_kaizoku": {
            "post": {
                "description": "Add the mangas in the database to Kaizoku. If it fails to add a manga, it will continue with the next manga. This is a heavy operation depending on the number of mangas in the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Add mangas to Kaizoku",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter which mangas to add by status. 1=reading, 2=completed, 3=on hold, 4=dropped, 5=plan to read. Example: status=1,2,3,5",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/mangas/add_to_tranga": {
            "post": {
                "description": "Add the mangas in the database to Tranga. If it fails to add a manga, it will continue with the next manga. This is a heavy operation depending on the number of mangas in the database. Currently, only MangaDex mangas can be added to Tranga, but it'll try all mangas anyway.",
                "produces": [
                    "application/json"
                ],
                "summary": "Add mangas to Tranga",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "Filter which mangas to add by status. 1=reading, 2=completed, 3=on hold, 4=dropped, 5=plan to read. Example: status=1,2,3,5",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/mangas/iframe": {
            "get": {
                "description": "Returns an iFrame with mangas. Only mangas with unread chapters, and status reading or completed. Sort by last released chapter date. Designed to be used with [Homarr](https://github.com/ajnart/homarr).",
                "produces": [
                    "text/html"
                ],
                "summary": "Mangas iFrame",
                "parameters": [
                    {
                        "type": "string",
                        "example": "https://sub.domain.com",
                        "description": "API URL used by your browser. Used for the button that updates the last read chater, as your browser needs to send a request to the API to update the chapter.",
                        "name": "api_url",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "light",
                        "description": "Homarr theme, defaults to light. If it's different from your Homarr theme, the background turns white",
                        "name": "theme",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 5,
                        "description": "Limits the number of items in the iFrame.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "If true, shows a warning in the iFrame if an error occurred in the background. Defaults to true.",
                        "name": "showBackgroundErrorWarning",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HTML content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mangas/metadata": {
            "patch": {
                "description": "Get the mangas metadata from the sources and update them in the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update mangas metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notify if a new chapter was released for the manga (only of mangas with status reading or completed).",
                        "name": "notify",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/mangas/search": {
            "post": {
                "description": "Searches a manga in the source. You must provide the source site URL like \"https://mangadex.org\" and the search query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Search manga",
                "parameters": [
                    {
                        "description": "Search data",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.SearchMangaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"mangas\": [mangaSearchResultObj]}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.MangaSearchResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/multimanga": {
            "get": {
                "description": "Gets a multimanga from the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get multimanga",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"multimanga\": multimangaObj}",
                        "schema": {
                            "$ref": "#/definitions/manga.MultiManga"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a multimanga from the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete multimanga",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/multimanga/chapters": {
            "get": {
                "description": "Get chapters of the current manga of a multimanga from the source.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get multimanga current manga chapters",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"chapters\": [chapterObj]}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/manga.Chapter"
                            }
                        }
                    }
                }
            }
        },
        "/multimanga/cover_img": {
            "patch": {
                "description": "Updates a multimanga cover image in the database. You must provide only one of the following: cover_img, cover_img_url, use_current_manga_cover_img.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update multimanga cover image",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Multimanga cover image file. Remember to set the Content-Type header to 'multipart/form-data' when sending the request.",
                        "name": "cover_img",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "example": "\"https://example.com/cover.jpg\"",
                        "description": "Multimanga cover image URL",
                        "name": "cover_img_url",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "Use the multimanga's current manga cover image",
                        "name": "use_current_manga_cover_img",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/multimanga/last_read_chapter": {
            "patch": {
                "description": "Updates a multimanga last read chapter in the database. It also needs to know from which manga the chapter is from. If both `chapter` and `chapter_url` are empty strings in the body, set the last read chapter to the last released chapter in the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update multimanga last read chapter",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Manga ID",
                        "name": "manga_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Chapter",
                        "name": "chapter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UpdateMangaChapterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        },
        "/multimanga/status": {
            "patch": {
                "description": "Updates a multimanga status in the database.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update multimanga status",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Multimanga ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Multimanga status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UpdateMangaStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.responseMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dashboard.BackgroundError": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Error message.",
                    "type": "string"
                },
                "time": {
                    "description": "Time when the error occurred.",
                    "type": "string"
                }
            }
        },
        "dashboard.Configs": {
            "type": "object",
            "properties": {
                "dashboard": {
                    "type": "object",
                    "properties": {
                        "columns": {
                            "type": "integer"
                        },
                        "searchResultsLimit": {
                            "type": "integer"
                        },
                        "showBackgroundErrorWarning": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "manga.Chapter": {
            "type": "object",
            "properties": {
                "chapter": {
                    "description": "Chapter usually is the chapter number, but in some cases it can be a one-shot or a special chapter",
                    "type": "string"
                },
                "internalID": {
                    "description": "InteralID is a unique identifier for the chapter in the source",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the chapter",
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "updatedAt": {
                    "description": "UpdatedAt is the time when the chapter was released or updated (read).\nShould truncate at the second.\nThe timezone should be the default/system timezone.",
                    "type": "string"
                },
                "url": {
                    "description": "URL is the URL of the chapter",
                    "type": "string"
                }
            }
        },
        "manga.Manga": {
            "type": "object",
            "properties": {
                "coverImg": {
                    "description": "CoverImg is the cover image of the manga",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "coverImgFixed": {
                    "description": "CoverImgFixed is true if the cover image is fixed. If true, the cover image will not be updated when updating the manga metadata.\nIt's used for when the cover image is manually set by the user.",
                    "type": "boolean"
                },
                "coverImgResized": {
                    "description": "CoverImgResized is true if the cover image was resized",
                    "type": "boolean"
                },
                "coverImgURL": {
                    "description": "CoverImgURL is the URL of the cover image",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "internalID": {
                    "description": "InteralID is a unique identifier for the manga in the source",
                    "type": "string"
                },
                "lastReadChapter": {
                    "description": "LastReadChapter is the last chapter read by the user",
                    "allOf": [
                        {
                            "$ref": "#/definitions/manga.Chapter"
                        }
                    ]
                },
                "lastReleasedChapter": {
                    "description": "LastReleasedChapter is the last chapter released by the source",
                    "allOf": [
                        {
                            "$ref": "#/definitions/manga.Chapter"
                        }
                    ]
                },
                "multiMangaID": {
                    "description": "When the manga is part of a multimanga, this field should be set to the multimanga ID",
                    "type": "integer"
                },
                "name": {
                    "description": "Name is the name of the manga",
                    "type": "string"
                },
                "preferredGroup": {
                    "description": "PreferredGroup is the preferred group that translates (and more) the manga\nNot all sources have multiple groups",
                    "type": "string"
                },
                "source": {
                    "description": "Source is the source of the manga, usually the domain of the website",
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "url": {
                    "description": "URL is the URL of the manga",
                    "type": "string"
                }
            }
        },
        "manga.MultiManga": {
            "type": "object",
            "properties": {
                "coverImg": {
                    "description": "CoverImg is the cover image of the multimanga",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "coverImgFixed": {
                    "description": "CoverImgFixed is true if the cover image is fixed. If false (default) the current manga's cover image should be used.\nElse, use the multimanga's cover image fields.\nIt's used for when the cover image is manually set by the user.",
                    "type": "boolean"
                },
                "coverImgResized": {
                    "description": "CoverImgResized is true if the cover image was resized",
                    "type": "boolean"
                },
                "coverImgURL": {
                    "description": "CoverImgURL is the URL of the cover image",
                    "type": "string"
                },
                "currentManga": {
                    "$ref": "#/definitions/manga.Manga"
                },
                "id": {
                    "type": "integer"
                },
                "lastReadChapter": {
                    "$ref": "#/definitions/manga.Chapter"
                },
                "mangas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/manga.Manga"
                    }
                },
                "status": {
                    "description": "All mangas in the multimanga should have the same status",
                    "type": "integer"
                }
            }
        },
        "models.MangaSearchResult": {
            "type": "object",
            "properties": {
                "coverURL": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "internalID": {
                    "type": "string"
                },
                "lastChapter": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "routes.AddMangaRequest": {
            "type": "object",
            "required": [
                "status",
                "url"
            ],
            "properties": {
                "last_read_chapter": {
                    "type": "string"
                },
                "last_read_chapter_internal_id": {
                    "type": "string"
                },
                "last_read_chapter_url": {
                    "type": "string"
                },
                "manga_internal_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 0
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "routes.SearchMangaRequest": {
            "type": "object",
            "required": [
                "q",
                "source_url"
            ],
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "q": {
                    "type": "string"
                },
                "source_url": {
                    "type": "string"
                }
            }
        },
        "routes.UpdateMangaChapterRequest": {
            "type": "object",
            "properties": {
                "chapter": {
                    "type": "string"
                },
                "chapter_internal_id": {
                    "type": "string"
                },
                "chapter_url": {
                    "type": "string"
                }
            }
        },
        "routes.UpdateMangaStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 0
                }
            }
        },
        "routes.responseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}