// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: mangaplus.proto

package mangaplus

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Language int32

const (
	Language_ENGLISH    Language = 0
	Language_SPANISH    Language = 1
	Language_FRENCH     Language = 2
	Language_INDONESIAN Language = 3
	Language_PORTUGUESE Language = 4
	Language_RUSSIAN    Language = 5
	Language_THAI       Language = 6
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "ENGLISH",
		1: "SPANISH",
		2: "FRENCH",
		3: "INDONESIAN",
		4: "PORTUGUESE",
		5: "RUSSIAN",
		6: "THAI",
	}
	Language_value = map[string]int32{
		"ENGLISH":    0,
		"SPANISH":    1,
		"FRENCH":     2,
		"INDONESIAN": 3,
		"PORTUGUESE": 4,
		"RUSSIAN":    5,
		"THAI":       6,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_mangaplus_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_mangaplus_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{0}
}

type UpdateTiming int32

const (
	UpdateTiming_NOT_REGULARLY UpdateTiming = 0
	UpdateTiming_MONDAY        UpdateTiming = 1
	UpdateTiming_TUESDAY       UpdateTiming = 2
	UpdateTiming_WEDNESDAY     UpdateTiming = 3
	UpdateTiming_THURSDAY      UpdateTiming = 4
	UpdateTiming_FRIDAY        UpdateTiming = 5
	UpdateTiming_SATURDAY      UpdateTiming = 6
	UpdateTiming_SUNDAY        UpdateTiming = 7
	UpdateTiming_DAY           UpdateTiming = 8
)

// Enum value maps for UpdateTiming.
var (
	UpdateTiming_name = map[int32]string{
		0: "NOT_REGULARLY",
		1: "MONDAY",
		2: "TUESDAY",
		3: "WEDNESDAY",
		4: "THURSDAY",
		5: "FRIDAY",
		6: "SATURDAY",
		7: "SUNDAY",
		8: "DAY",
	}
	UpdateTiming_value = map[string]int32{
		"NOT_REGULARLY": 0,
		"MONDAY":        1,
		"TUESDAY":       2,
		"WEDNESDAY":     3,
		"THURSDAY":      4,
		"FRIDAY":        5,
		"SATURDAY":      6,
		"SUNDAY":        7,
		"DAY":           8,
	}
)

func (x UpdateTiming) Enum() *UpdateTiming {
	p := new(UpdateTiming)
	*p = x
	return p
}

func (x UpdateTiming) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateTiming) Descriptor() protoreflect.EnumDescriptor {
	return file_mangaplus_proto_enumTypes[1].Descriptor()
}

func (UpdateTiming) Type() protoreflect.EnumType {
	return &file_mangaplus_proto_enumTypes[1]
}

func (x UpdateTiming) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateTiming.Descriptor instead.
func (UpdateTiming) EnumDescriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{1}
}

type TitleDetailView_Rating int32

const (
	TitleDetailView_ALLAGE   TitleDetailView_Rating = 0
	TitleDetailView_TEEN     TitleDetailView_Rating = 1
	TitleDetailView_TEENPLUS TitleDetailView_Rating = 2
	TitleDetailView_MATURE   TitleDetailView_Rating = 3
)

// Enum value maps for TitleDetailView_Rating.
var (
	TitleDetailView_Rating_name = map[int32]string{
		0: "ALLAGE",
		1: "TEEN",
		2: "TEENPLUS",
		3: "MATURE",
	}
	TitleDetailView_Rating_value = map[string]int32{
		"ALLAGE":   0,
		"TEEN":     1,
		"TEENPLUS": 2,
		"MATURE":   3,
	}
)

func (x TitleDetailView_Rating) Enum() *TitleDetailView_Rating {
	p := new(TitleDetailView_Rating)
	*p = x
	return p
}

func (x TitleDetailView_Rating) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TitleDetailView_Rating) Descriptor() protoreflect.EnumDescriptor {
	return file_mangaplus_proto_enumTypes[2].Descriptor()
}

func (TitleDetailView_Rating) Type() protoreflect.EnumType {
	return &file_mangaplus_proto_enumTypes[2]
}

func (x TitleDetailView_Rating) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TitleDetailView_Rating.Descriptor instead.
func (TitleDetailView_Rating) EnumDescriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{5, 0}
}

type Chapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleId         uint32 `protobuf:"varint,1,opt,name=titleId,proto3" json:"titleId,omitempty"`
	ChapterId       uint32 `protobuf:"varint,2,opt,name=chapterId,proto3" json:"chapterId,omitempty"`
	TitleName       string `protobuf:"bytes,3,opt,name=titleName,proto3" json:"titleName,omitempty"`
	ChapterSubTitle string `protobuf:"bytes,4,opt,name=chapterSubTitle,proto3" json:"chapterSubTitle,omitempty"`
	ThumbnailUrl    string `protobuf:"bytes,5,opt,name=thumbnailUrl,proto3" json:"thumbnailUrl,omitempty"`
	StartTimeStamp  uint32 `protobuf:"varint,6,opt,name=startTimeStamp,proto3" json:"startTimeStamp,omitempty"`
	EndTimeStamp    uint32 `protobuf:"varint,7,opt,name=endTimeStamp,proto3" json:"endTimeStamp,omitempty"`
	AlreadyViewed   bool   `protobuf:"varint,8,opt,name=alreadyViewed,proto3" json:"alreadyViewed,omitempty"`
	IsVerticalOnly  bool   `protobuf:"varint,9,opt,name=isVerticalOnly,proto3" json:"isVerticalOnly,omitempty"`
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mangaplus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_mangaplus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{0}
}

func (x *Chapter) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *Chapter) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *Chapter) GetTitleName() string {
	if x != nil {
		return x.TitleName
	}
	return ""
}

func (x *Chapter) GetChapterSubTitle() string {
	if x != nil {
		return x.ChapterSubTitle
	}
	return ""
}

func (x *Chapter) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *Chapter) GetStartTimeStamp() uint32 {
	if x != nil {
		return x.StartTimeStamp
	}
	return 0
}

func (x *Chapter) GetEndTimeStamp() uint32 {
	if x != nil {
		return x.EndTimeStamp
	}
	return 0
}

func (x *Chapter) GetAlreadyViewed() bool {
	if x != nil {
		return x.AlreadyViewed
	}
	return false
}

func (x *Chapter) GetIsVerticalOnly() bool {
	if x != nil {
		return x.IsVerticalOnly
	}
	return false
}

type Title struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleId        uint32   `protobuf:"varint,1,opt,name=titleId,proto3" json:"titleId,omitempty"`
	TitleName      string   `protobuf:"bytes,2,opt,name=titleName,proto3" json:"titleName,omitempty"`
	Author         string   `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	ImagePortrait  string   `protobuf:"bytes,4,opt,name=imagePortrait,proto3" json:"imagePortrait,omitempty"`
	ImageLandscape string   `protobuf:"bytes,5,opt,name=imageLandscape,proto3" json:"imageLandscape,omitempty"`
	ViewCount      uint32   `protobuf:"varint,6,opt,name=viewCount,proto3" json:"viewCount,omitempty"`
	Language       Language `protobuf:"varint,7,opt,name=language,proto3,enum=mangaplus.Language" json:"language,omitempty"`
}

func (x *Title) Reset() {
	*x = Title{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mangaplus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Title) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Title) ProtoMessage() {}

func (x *Title) ProtoReflect() protoreflect.Message {
	mi := &file_mangaplus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Title.ProtoReflect.Descriptor instead.
func (*Title) Descriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{1}
}

func (x *Title) GetTitleId() uint32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *Title) GetTitleName() string {
	if x != nil {
		return x.TitleName
	}
	return ""
}

func (x *Title) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Title) GetImagePortrait() string {
	if x != nil {
		return x.ImagePortrait
	}
	return ""
}

func (x *Title) GetImageLandscape() string {
	if x != nil {
		return x.ImageLandscape
	}
	return ""
}

func (x *Title) GetViewCount() uint32 {
	if x != nil {
		return x.ViewCount
	}
	return 0
}

func (x *Title) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_ENGLISH
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success *SuccessResult `protobuf:"bytes,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   *ErrorResult   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mangaplus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_mangaplus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{2}
}

func (x *Response) GetSuccess() *SuccessResult {
	if x != nil {
		return x.Success
	}
	return nil
}

func (x *Response) GetError() *ErrorResult {
	if x != nil {
		return x.Error
	}
	return nil
}

type ErrorResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default     *ErrorResult_Item   `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
	Display     *ErrorResult_Item   `protobuf:"bytes,3,opt,name=display,proto3" json:"display,omitempty"`
	AllLanguage []*ErrorResult_Item `protobuf:"bytes,5,rep,name=allLanguage,proto3" json:"allLanguage,omitempty"`
}

func (x *ErrorResult) Reset() {
	*x = ErrorResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mangaplus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResult) ProtoMessage() {}

func (x *ErrorResult) ProtoReflect() protoreflect.Message {
	mi := &file_mangaplus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResult.ProtoReflect.Descriptor instead.
func (*ErrorResult) Descriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{3}
}

func (x *ErrorResult) GetDefault() *ErrorResult_Item {
	if x != nil {
		return x.Default
	}
	return nil
}

func (x *ErrorResult) GetDisplay() *ErrorResult_Item {
	if x != nil {
		return x.Display
	}
	return nil
}

func (x *ErrorResult) GetAllLanguage() []*ErrorResult_Item {
	if x != nil {
		return x.AllLanguage
	}
	return nil
}

type SuccessResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFeaturedUpdated bool             `protobuf:"varint,1,opt,name=isFeaturedUpdated,proto3" json:"isFeaturedUpdated,omitempty"`
	TitleDetailView   *TitleDetailView `protobuf:"bytes,8,opt,name=titleDetailView,proto3" json:"titleDetailView,omitempty"`
	AllTitlesViewV2   *AllTitlesViewV2 `protobuf:"bytes,25,opt,name=allTitlesViewV2,proto3" json:"allTitlesViewV2,omitempty"`
}

func (x *SuccessResult) Reset() {
	*x = SuccessResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mangaplus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResult) ProtoMessage() {}

func (x *SuccessResult) ProtoReflect() protoreflect.Message {
	mi := &file_mangaplus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResult.ProtoReflect.Descriptor instead.
func (*SuccessResult) Descriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{4}
}

func (x *SuccessResult) GetIsFeaturedUpdated() bool {
	if x != nil {
		return x.IsFeaturedUpdated
	}
	return false
}

func (x *SuccessResult) GetTitleDetailView() *TitleDetailView {
	if x != nil {
		return x.TitleDetailView
	}
	return nil
}

func (x *SuccessResult) GetAllTitlesViewV2() *AllTitlesViewV2 {
	if x != nil {
		return x.AllTitlesViewV2
	}
	return nil
}

type TitleDetailView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                    *Title       `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	TitleImageUrl            string       `protobuf:"bytes,2,opt,name=titleImageUrl,proto3" json:"titleImageUrl,omitempty"`
	Overview                 string       `protobuf:"bytes,3,opt,name=overview,proto3" json:"overview,omitempty"`
	BackgroundImageUrl       string       `protobuf:"bytes,4,opt,name=backgroundImageUrl,proto3" json:"backgroundImageUrl,omitempty"`
	NextTimeStamp            uint32       `protobuf:"varint,5,opt,name=nextTimeStamp,proto3" json:"nextTimeStamp,omitempty"`
	UpdateTiming             UpdateTiming `protobuf:"varint,6,opt,name=updateTiming,proto3,enum=mangaplus.UpdateTiming" json:"updateTiming,omitempty"`
	ViewingPeriodDescription string       `protobuf:"bytes,7,opt,name=viewingPeriodDescription,proto3" json:"viewingPeriodDescription,omitempty"`
	NonAppearanceInfo        string       `protobuf:"bytes,8,opt,name=nonAppearanceInfo,proto3" json:"nonAppearanceInfo,omitempty"`
	// repeated Chapter firstChapterList = 9;
	// repeated Chapter lastChapterList = 10;
	RecommendedTitleList []*Title                    `protobuf:"bytes,12,rep,name=recommendedTitleList,proto3" json:"recommendedTitleList,omitempty"`
	IsSimulReleased      bool                        `protobuf:"varint,14,opt,name=isSimulReleased,proto3" json:"isSimulReleased,omitempty"`
	IsSubscribed         bool                        `protobuf:"varint,15,opt,name=isSubscribed,proto3" json:"isSubscribed,omitempty"`
	Rating               TitleDetailView_Rating      `protobuf:"varint,16,opt,name=rating,proto3,enum=mangaplus.TitleDetailView_Rating" json:"rating,omitempty"`
	ChaptersDescending   bool                        `protobuf:"varint,17,opt,name=chaptersDescending,proto3" json:"chaptersDescending,omitempty"`
	NumberOfViews        uint32                      `protobuf:"varint,18,opt,name=numberOfViews,proto3" json:"numberOfViews,omitempty"`
	Chapters             []*TitleDetailView_Chapters `protobuf:"bytes,28,rep,name=chapters,proto3" json:"chapters,omitempty"`
}

func (x *TitleDetailView) Reset() {
	*x = TitleDetailView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mangaplus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleDetailView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleDetailView) ProtoMessage() {}

func (x *TitleDetailView) ProtoReflect() protoreflect.Message {
	mi := &file_mangaplus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleDetailView.ProtoReflect.Descriptor instead.
func (*TitleDetailView) Descriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{5}
}

func (x *TitleDetailView) GetTitle() *Title {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *TitleDetailView) GetTitleImageUrl() string {
	if x != nil {
		return x.TitleImageUrl
	}
	return ""
}

func (x *TitleDetailView) GetOverview() string {
	if x != nil {
		return x.Overview
	}
	return ""
}

func (x *TitleDetailView) GetBackgroundImageUrl() string {
	if x != nil {
		return x.BackgroundImageUrl
	}
	return ""
}

func (x *TitleDetailView) GetNextTimeStamp() uint32 {
	if x != nil {
		return x.NextTimeStamp
	}
	return 0
}

func (x *TitleDetailView) GetUpdateTiming() UpdateTiming {
	if x != nil {
		return x.UpdateTiming
	}
	return UpdateTiming_NOT_REGULARLY
}

func (x *TitleDetailView) GetViewingPeriodDescription() string {
	if x != nil {
		return x.ViewingPeriodDescription
	}
	return ""
}

func (x *TitleDetailView) GetNonAppearanceInfo() string {
	if x != nil {
		return x.NonAppearanceInfo
	}
	return ""
}

func (x *TitleDetailView) GetRecommendedTitleList() []*Title {
	if x != nil {
		return x.RecommendedTitleList
	}
	return nil
}

func (x *TitleDetailView) GetIsSimulReleased() bool {
	if x != nil {
		return x.IsSimulReleased
	}
	return false
}

func (x *TitleDetailView) GetIsSubscribed() bool {
	if x != nil {
		return x.IsSubscribed
	}
	return false
}

func (x *TitleDetailView) GetRating() TitleDetailView_Rating {
	if x != nil {
		return x.Rating
	}
	return TitleDetailView_ALLAGE
}

func (x *TitleDetailView) GetChaptersDescending() bool {
	if x != nil {
		return x.ChaptersDescending
	}
	return false
}

func (x *TitleDetailView) GetNumberOfViews() uint32 {
	if x != nil {
		return x.NumberOfViews
	}
	return 0
}

func (x *TitleDetailView) GetChapters() []*TitleDetailView_Chapters {
	if x != nil {
		return x.Chapters
	}
	return nil
}

type AllTitlesViewV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllTitlesGroup []*AllTitlesGroup `protobuf:"bytes,1,rep,name=allTitlesGroup,proto3" json:"allTitlesGroup,omitempty"`
}

func (x *AllTitlesViewV2) Reset() {
	*x = AllTitlesViewV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mangaplus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTitlesViewV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTitlesViewV2) ProtoMessage() {}

func (x *AllTitlesViewV2) ProtoReflect() protoreflect.Message {
	mi := &file_mangaplus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTitlesViewV2.ProtoReflect.Descriptor instead.
func (*AllTitlesViewV2) Descriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{6}
}

func (x *AllTitlesViewV2) GetAllTitlesGroup() []*AllTitlesGroup {
	if x != nil {
		return x.AllTitlesGroup
	}
	return nil
}

type AllTitlesGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheTitle string   `protobuf:"bytes,1,opt,name=theTitle,proto3" json:"theTitle,omitempty"`
	Titles   []*Title `protobuf:"bytes,2,rep,name=titles,proto3" json:"titles,omitempty"`
}

func (x *AllTitlesGroup) Reset() {
	*x = AllTitlesGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mangaplus_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTitlesGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTitlesGroup) ProtoMessage() {}

func (x *AllTitlesGroup) ProtoReflect() protoreflect.Message {
	mi := &file_mangaplus_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTitlesGroup.ProtoReflect.Descriptor instead.
func (*AllTitlesGroup) Descriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{7}
}

func (x *AllTitlesGroup) GetTheTitle() string {
	if x != nil {
		return x.TheTitle
	}
	return ""
}

func (x *AllTitlesGroup) GetTitles() []*Title {
	if x != nil {
		return x.Titles
	}
	return nil
}

type ErrorResult_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string                   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Button   *ErrorResult_Item_Button `protobuf:"bytes,5,opt,name=button,proto3" json:"button,omitempty"`
	Language Language                 `protobuf:"varint,6,opt,name=language,proto3,enum=mangaplus.Language" json:"language,omitempty"`
}

func (x *ErrorResult_Item) Reset() {
	*x = ErrorResult_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mangaplus_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResult_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResult_Item) ProtoMessage() {}

func (x *ErrorResult_Item) ProtoReflect() protoreflect.Message {
	mi := &file_mangaplus_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResult_Item.ProtoReflect.Descriptor instead.
func (*ErrorResult_Item) Descriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ErrorResult_Item) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorResult_Item) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorResult_Item) GetButton() *ErrorResult_Item_Button {
	if x != nil {
		return x.Button
	}
	return nil
}

func (x *ErrorResult_Item) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_ENGLISH
}

type ErrorResult_Item_Button struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *ErrorResult_Item_Button) Reset() {
	*x = ErrorResult_Item_Button{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mangaplus_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResult_Item_Button) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResult_Item_Button) ProtoMessage() {}

func (x *ErrorResult_Item_Button) ProtoReflect() protoreflect.Message {
	mi := &file_mangaplus_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResult_Item_Button.ProtoReflect.Descriptor instead.
func (*ErrorResult_Item_Button) Descriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *ErrorResult_Item_Button) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type TitleDetailView_Chapters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count            uint32     `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	FirstChapterList []*Chapter `protobuf:"bytes,2,rep,name=firstChapterList,proto3" json:"firstChapterList,omitempty"`
	ChapterList      []*Chapter `protobuf:"bytes,3,rep,name=chapterList,proto3" json:"chapterList,omitempty"`
	LastChapterList  []*Chapter `protobuf:"bytes,4,rep,name=lastChapterList,proto3" json:"lastChapterList,omitempty"`
}

func (x *TitleDetailView_Chapters) Reset() {
	*x = TitleDetailView_Chapters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mangaplus_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleDetailView_Chapters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleDetailView_Chapters) ProtoMessage() {}

func (x *TitleDetailView_Chapters) ProtoReflect() protoreflect.Message {
	mi := &file_mangaplus_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleDetailView_Chapters.ProtoReflect.Descriptor instead.
func (*TitleDetailView_Chapters) Descriptor() ([]byte, []int) {
	return file_mangaplus_proto_rawDescGZIP(), []int{5, 0}
}

func (x *TitleDetailView_Chapters) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TitleDetailView_Chapters) GetFirstChapterList() []*Chapter {
	if x != nil {
		return x.FirstChapterList
	}
	return nil
}

func (x *TitleDetailView_Chapters) GetChapterList() []*Chapter {
	if x != nil {
		return x.ChapterList
	}
	return nil
}

func (x *TitleDetailView_Chapters) GetLastChapterList() []*Chapter {
	if x != nil {
		return x.LastChapterList
	}
	return nil
}

var File_mangaplus_proto protoreflect.FileDescriptor

var file_mangaplus_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x22, 0xc7, 0x02, 0x0a,
	0x07, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x72, 0x65,
	0x61, 0x64, 0x79, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x69, 0x73, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xf4, 0x01, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c,
	0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x61, 0x6e, 0x64, 0x73, 0x63, 0x61, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x6c, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e,
	0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d,
	0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x80, 0x03, 0x0a, 0x0b,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x6c, 0x6c,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x61, 0x6c, 0x6c,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x1a, 0xc3, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3a, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x1a, 0x20, 0x0a, 0x06,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc9,
	0x01, 0x0a, 0x0d, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x44,
	0x0a, 0x0f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65,
	0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x0f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x44, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x73, 0x56, 0x69, 0x65, 0x77, 0x56, 0x32, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x56, 0x32, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x56, 0x32, 0x22, 0xef, 0x07, 0x0a, 0x0f, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x12, 0x26,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3b,
	0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x18, 0x76,
	0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x76,
	0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x6e, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x44, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x69,
	0x73, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x6e, 0x67,
	0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73,
	0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x56, 0x69, 0x65, 0x77, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d,
	0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xd4, 0x01, 0x0a, 0x08,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3e,
	0x0a, 0x10, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x10, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x38, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0a, 0x0a, 0x06,
	0x41, 0x4c, 0x4c, 0x41, 0x47, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x45, 0x4e,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x45, 0x4e, 0x50, 0x4c, 0x55, 0x53, 0x10, 0x02,
	0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x03, 0x22, 0x54, 0x0a, 0x0f,
	0x41, 0x6c, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x56, 0x69, 0x65, 0x77, 0x56, 0x32, 0x12,
	0x41, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0x56, 0x0a, 0x0e, 0x41, 0x6c, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x28, 0x0a, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x52, 0x06, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x2a, 0x67, 0x0a, 0x08, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x47, 0x4c, 0x49, 0x53,
	0x48, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x50, 0x41, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x45, 0x4e, 0x43, 0x48, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x4e, 0x44, 0x4f, 0x4e, 0x45, 0x53, 0x49, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x4f, 0x52, 0x54, 0x55, 0x47, 0x55, 0x45, 0x53, 0x45, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07,
	0x52, 0x55, 0x53, 0x53, 0x49, 0x41, 0x4e, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x48, 0x41,
	0x49, 0x10, 0x06, 0x2a, 0x86, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x69, 0x6e, 0x67, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x55,
	0x4c, 0x41, 0x52, 0x4c, 0x59, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x4f, 0x4e, 0x44, 0x41,
	0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x55, 0x45, 0x53, 0x44, 0x41, 0x59, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x57, 0x45, 0x44, 0x4e, 0x45, 0x53, 0x44, 0x41, 0x59, 0x10, 0x03, 0x12,
	0x0c, 0x0a, 0x08, 0x54, 0x48, 0x55, 0x52, 0x53, 0x44, 0x41, 0x59, 0x10, 0x04, 0x12, 0x0a, 0x0a,
	0x06, 0x46, 0x52, 0x49, 0x44, 0x41, 0x59, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x41, 0x54,
	0x55, 0x52, 0x44, 0x41, 0x59, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x55, 0x4e, 0x44, 0x41,
	0x59, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x41, 0x59, 0x10, 0x08, 0x42, 0x0d, 0x5a, 0x0b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_mangaplus_proto_rawDescOnce sync.Once
	file_mangaplus_proto_rawDescData = file_mangaplus_proto_rawDesc
)

func file_mangaplus_proto_rawDescGZIP() []byte {
	file_mangaplus_proto_rawDescOnce.Do(func() {
		file_mangaplus_proto_rawDescData = protoimpl.X.CompressGZIP(file_mangaplus_proto_rawDescData)
	})
	return file_mangaplus_proto_rawDescData
}

var (
	file_mangaplus_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
	file_mangaplus_proto_msgTypes  = make([]protoimpl.MessageInfo, 11)
	file_mangaplus_proto_goTypes   = []any{
		(Language)(0),                    // 0: mangaplus.Language
		(UpdateTiming)(0),                // 1: mangaplus.UpdateTiming
		(TitleDetailView_Rating)(0),      // 2: mangaplus.TitleDetailView.Rating
		(*Chapter)(nil),                  // 3: mangaplus.Chapter
		(*Title)(nil),                    // 4: mangaplus.Title
		(*Response)(nil),                 // 5: mangaplus.Response
		(*ErrorResult)(nil),              // 6: mangaplus.ErrorResult
		(*SuccessResult)(nil),            // 7: mangaplus.SuccessResult
		(*TitleDetailView)(nil),          // 8: mangaplus.TitleDetailView
		(*AllTitlesViewV2)(nil),          // 9: mangaplus.AllTitlesViewV2
		(*AllTitlesGroup)(nil),           // 10: mangaplus.AllTitlesGroup
		(*ErrorResult_Item)(nil),         // 11: mangaplus.ErrorResult.Item
		(*ErrorResult_Item_Button)(nil),  // 12: mangaplus.ErrorResult.Item.Button
		(*TitleDetailView_Chapters)(nil), // 13: mangaplus.TitleDetailView.Chapters
	}
)
var file_mangaplus_proto_depIdxs = []int32{
	0,  // 0: mangaplus.Title.language:type_name -> mangaplus.Language
	7,  // 1: mangaplus.Response.success:type_name -> mangaplus.SuccessResult
	6,  // 2: mangaplus.Response.error:type_name -> mangaplus.ErrorResult
	11, // 3: mangaplus.ErrorResult.default:type_name -> mangaplus.ErrorResult.Item
	11, // 4: mangaplus.ErrorResult.display:type_name -> mangaplus.ErrorResult.Item
	11, // 5: mangaplus.ErrorResult.allLanguage:type_name -> mangaplus.ErrorResult.Item
	8,  // 6: mangaplus.SuccessResult.titleDetailView:type_name -> mangaplus.TitleDetailView
	9,  // 7: mangaplus.SuccessResult.allTitlesViewV2:type_name -> mangaplus.AllTitlesViewV2
	4,  // 8: mangaplus.TitleDetailView.title:type_name -> mangaplus.Title
	1,  // 9: mangaplus.TitleDetailView.updateTiming:type_name -> mangaplus.UpdateTiming
	4,  // 10: mangaplus.TitleDetailView.recommendedTitleList:type_name -> mangaplus.Title
	2,  // 11: mangaplus.TitleDetailView.rating:type_name -> mangaplus.TitleDetailView.Rating
	13, // 12: mangaplus.TitleDetailView.chapters:type_name -> mangaplus.TitleDetailView.Chapters
	10, // 13: mangaplus.AllTitlesViewV2.allTitlesGroup:type_name -> mangaplus.AllTitlesGroup
	4,  // 14: mangaplus.AllTitlesGroup.titles:type_name -> mangaplus.Title
	12, // 15: mangaplus.ErrorResult.Item.button:type_name -> mangaplus.ErrorResult.Item.Button
	0,  // 16: mangaplus.ErrorResult.Item.language:type_name -> mangaplus.Language
	3,  // 17: mangaplus.TitleDetailView.Chapters.firstChapterList:type_name -> mangaplus.Chapter
	3,  // 18: mangaplus.TitleDetailView.Chapters.chapterList:type_name -> mangaplus.Chapter
	3,  // 19: mangaplus.TitleDetailView.Chapters.lastChapterList:type_name -> mangaplus.Chapter
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_mangaplus_proto_init() }
func file_mangaplus_proto_init() {
	if File_mangaplus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mangaplus_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Chapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mangaplus_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Title); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mangaplus_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mangaplus_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ErrorResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mangaplus_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SuccessResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mangaplus_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TitleDetailView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mangaplus_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AllTitlesViewV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mangaplus_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AllTitlesGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mangaplus_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ErrorResult_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mangaplus_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ErrorResult_Item_Button); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mangaplus_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TitleDetailView_Chapters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mangaplus_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mangaplus_proto_goTypes,
		DependencyIndexes: file_mangaplus_proto_depIdxs,
		EnumInfos:         file_mangaplus_proto_enumTypes,
		MessageInfos:      file_mangaplus_proto_msgTypes,
	}.Build()
	File_mangaplus_proto = out.File
	file_mangaplus_proto_rawDesc = nil
	file_mangaplus_proto_goTypes = nil
	file_mangaplus_proto_depIdxs = nil
}
